const clockEl = document.querySelector('.clock');
console.log("‚úÖ clockEl =", clockEl);
if (!clockEl) {
  console.warn("‚ö†Ô∏è clockEl –Ω–µ –Ω–∞–π–¥–µ–Ω!");
}

const explousionSound = new Audio("scripts/sounds/piu.mp3");


function fireAt(element) {
  explousionSound.currentTime = 0;
  explousionSound.play().catch(() => {});
  const rect = element.getBoundingClientRect();
  console.log("fireAt üìê fireAt ‚Üí rect:", rect);
  // —Å—á–∏—Ç–∞–µ–º —Ç–æ—á–∫—É –≤ –ø–∏–∫—Å–µ–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á—É—Ç—å –Ω–∞–¥ —Ü–∏—Ñ—Ä–∞–º–∏
  const px = rect.left + rect.width * 0.5;
  const py = rect.top  + rect.height * 0.8;
  // –∫–æ–Ω–≤–µ—Ä—Ç–∏–º –≤ –¥–æ–ª—é –æ—Ç —ç–∫—Ä–∞–Ω–∞:
  const origin = {
    x: px / window.innerWidth,
    y: py / window.innerHeight
  };
  confetti({
    particleCount: 200,
    spread: 80,
    drift: 1.5,
    shapes: ['circle', 'square'],
    scalar: 0.6,
    origin
  });
  
}

function fireAtMikro(element) {
  const rect = element.getBoundingClientRect();
  console.log("fireAtMikro üìê fireAt ‚Üí rect:", rect);
  // —Å—á–∏—Ç–∞–µ–º —Ç–æ—á–∫—É –≤ –ø–∏–∫—Å–µ–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á—É—Ç—å –Ω–∞–¥ —Ü–∏—Ñ—Ä–∞–º–∏
  const px = rect.left + rect.width * 0.7;
  const py = rect.top  + rect.height * 0.3;
  // –∫–æ–Ω–≤–µ—Ä—Ç–∏–º –≤ –¥–æ–ª—é –æ—Ç —ç–∫—Ä–∞–Ω–∞:
  const origin = {
    x: px / window.innerWidth,
    y: py / window.innerHeight
  };
  confetti({
    particleCount: 3,
    spread: 4,
    startVelocity: 20,
    shapes: ['circle', 'square'],
    drift: 1,
    colors: ['#90A993'],
    origin
  });
}

window.fireConfetti = function() {
  // –ø—Ä–æ—Å—Ç–æ–π –≤–∑—Ä—ã–≤ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —á–∞—Å–æ–≤
  confetti({
    particleCount: 100,
    spread: 70,
    origin: { y: 0.6 }
  });
  // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –≤—Å–ø–ª–µ—Å–∫–æ–≤:
  confetti({
    particleCount: 50,
    spread: 120,
    origin: { x: 0.3, y: 0.7 }
  });
  confetti({
    particleCount: 50,
    spread: 120,
    origin: { x: 0.7, y: 0.7 }
  });
};


const oldMinuteHandler = window.onMinuteChange;
window.onMinuteChange = minutes => {
  console.log("üî• [confetti] onMinuteChange wrapper, minutes =", minutes);
  if (typeof oldMinuteHandler === 'function') oldMinuteHandler(minutes);
  if (minutes % 1 === 0 && clockEl) {
    console.log("üî• fireAt –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω!");
    fireAt(clockEl);
  }
};

const oldTenSecHandler = window.onTenSecTick;
window.onTenSecTick = seconds => {
  if (typeof oldTenSecHandler === 'function') oldTenSecHandler(seconds);
  // –∏ –µ—â—ë –º–∏–Ω–∏-–≤—ã—Å—Ç—Ä–µ–ª—ã –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
  if (seconds % 10 === 0 && clockEl) {
    fireAtMikro(clockEl);
  }
};

// const clockEl = document.querySelector('.clock');
// if (!clockEl) {
//   console.warn("‚ö†Ô∏è clockEl –Ω–µ –Ω–∞–π–¥–µ–Ω!");
// } else {
//   console.log("‚úÖ clockEl –Ω–∞–π–¥–µ–Ω:", clockEl);
// }
// const explousionSound = new Audio("scripts/sounds/piu.mp3");




// function fireAt(element) {
//   const rect = element.getBoundingClientRect();
//   console.log("fireAt üìê fireAt ‚Üí rect:", rect);
//   // —Å—á–∏—Ç–∞–µ–º —Ç–æ—á–∫—É –≤ –ø–∏–∫—Å–µ–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á—É—Ç—å –Ω–∞–¥ —Ü–∏—Ñ—Ä–∞–º–∏
//   const px = rect.left + rect.width * 0.5;
//   const py = rect.top  + rect.height * 0.8;
//   // –∫–æ–Ω–≤–µ—Ä—Ç–∏–º –≤ –¥–æ–ª—é –æ—Ç —ç–∫—Ä–∞–Ω–∞:
//   const origin = {
//     x: px / window.innerWidth,
//     y: py / window.innerHeight
//   };
//   confetti({
//     particleCount: 200,
//     spread: 80,
//     drift: 1.5,
//     shapes: ['circle', 'square'],
//     scalar: 0.6,
//     origin
//   });
// }

// function fireAtMikro(element) {
//   const rect = element.getBoundingClientRect();
//   console.log("fireAtMikro üìê fireAt ‚Üí rect:", rect);
//   // —Å—á–∏—Ç–∞–µ–º —Ç–æ—á–∫—É –≤ –ø–∏–∫—Å–µ–ª—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á—É—Ç—å –Ω–∞–¥ —Ü–∏—Ñ—Ä–∞–º–∏
//   const px = rect.left + rect.width * 0.7;
//   const py = rect.top  + rect.height * 0.3;
//   // –∫–æ–Ω–≤–µ—Ä—Ç–∏–º –≤ –¥–æ–ª—é –æ—Ç —ç–∫—Ä–∞–Ω–∞:
//   const origin = {
//     x: px / window.innerWidth,
//     y: py / window.innerHeight
//   };
//   confetti({
//     particleCount: 3,
//     spread: 4,
//     startVelocity: 20,
//     shapes: ['circle', 'square'],
//     drift: 1,
//     colors: ['#90A993'],
//     origin
//   });
// }

// // —Å–∫—Ä–∏–ø—Ç –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
// // console.log("scriptConfetti 1");
// // (() => {
// //   // –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
// //   console.log("scriptConfetti 2");
// //   window.prevMinutes = window.prevMinutes ?? null;

// //   // —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ‚Äî –≤—ã–∑—ã–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ updateCountdown
// //   window.fireConfetti = function() {
// //     // –ø—Ä–æ—Å—Ç–æ–π –≤–∑—Ä—ã–≤ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —á–∞—Å–æ–≤
// //     confetti({
// //       particleCount: 100,
// //       spread: 70,
// //       origin: { y: 0.6 }
// //     });
// //     // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –≤—Å–ø–ª–µ—Å–∫–æ–≤:
// //     confetti({
// //       particleCount: 50,
// //       spread: 120,
// //       origin: { x: 0.3, y: 0.7 }
// //     });
// //     confetti({
// //       particleCount: 50,
// //       spread: 120,
// //       origin: { x: 0.7, y: 0.7 }
// //     });
// //   };

//   // ¬´–æ–±—ë—Ä—Ç–∫–∞¬ª –¥–ª—è updateCountdown: –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –º–∏–Ω—É—Ç—ã –∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ ‚Äî —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫
//   // const originalUpdate = window.updateCountdown;
//   // window.updateCountdown = function() {
//   //   // –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–∏—Ç–∞–µ–º, –∫–∞–∫–∏–µ –±—ã–ª–∏ –º–∏–Ω—É—Ç—ã
//   //   const currentMin = document.getElementById('minutes').innerText;
//   //   originalUpdate(); // –æ–±–Ω–æ–≤–ª—è–µ–º —Ü–∏—Ñ—Ä—ã
//   //   const newMin = document.getElementById('minutes').innerText;

//   //   if (prevMinutes !== null && newMin !== prevMinutes) {
//   //       console.log("üéâ –ú–∏–Ω—É—Ç—ã –ø–æ–º–µ–Ω—è–ª–∏—Å—å:", prevMinutes, "‚Üí", newMin);
//   //     // –º–∏–Ω—É—Ç—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å!
//   //     window.fireConfetti();
//   //   }
//   //   prevMinutes = newMin;
//   //   if (oldSec !== newSec && parseInt(newSec,10) % 5 === 0) {
//   //       console.log("üîî 5-—Å–µ–∫—É–Ω–¥–Ω—ã–π —Ç–µ—Å—Ç:", oldSec, "‚Üí", newSec);
//   //        window.fireConfetti();
//   //   }
//   // };
// // })();

// window.prevMinutes = window.prevMinutes ?? null;

// // –¥–µ–ª–∞–µ–º –µ—ë –¥–æ—Å—Ç—É–ø–Ω–æ–π –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
// // window.fireConfetti = function() {
// // console.log("üí• fireConfetti()");
// // confetti({ particleCount:100, spread:70, origin:{ y:0.6 } });
// // };

// window.fireConfetti = function() {
// console.log("üí• fireConfetti()");
// // –ø—Ä–æ—Å—Ç–æ–π –≤–∑—Ä—ã–≤ –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —á–∞—Å–æ–≤
//     confetti({
//       particleCount: 100,
//       spread: 70,
//       origin: { y: 0.6 }
//     });
//     // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –≤—Å–ø–ª–µ—Å–∫–æ–≤:
//     confetti({
//       particleCount: 50,
//       spread: 120,
//       origin: { x: 0.3, y: 0.7 }
//     });
//     confetti({
//       particleCount: 50,
//       spread: 120,
//       origin: { x: 0.7, y: 0.7 }
//     });
// };


// // function updateCountdown() {
// // const now = new Date();
// // const remainingTime = targetDate - now;

// // const days    = Math.floor(remainingTime / (1000 * 60 * 60 * 24));
// // const hours   = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
// // const minutes = Math.floor((remainingTime % (1000 * 60 * 60))      / (1000 * 60));
// // const seconds = Math.floor((remainingTime % (1000 * 60))           / 1000);

// // document.getElementById('days').   innerText = String(days).padStart(2, '0');
// // document.getElementById('hours').  innerText = String(hours).padStart(2, '0');
// // document.getElementById('minutes').innerText = String(minutes).padStart(2, '0');
// // document.getElementById('seconds').innerText = String(seconds).padStart(2, '0');

// // // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–º–µ–Ω—ã –º–∏–Ω—É—Ç
// // console.log("‚è± prevMinutes:", prevMinutes, "minutes:", minutes);
// // if (prevMinutes !== null && minutes !== prevMinutes) {
// //   console.log("üéâ –ú–∏–Ω—É—Ç—ã –ø–æ–º–µ–Ω—è–ª–∏—Å—å:", prevMinutes, "‚Üí", minutes);

// //   fireAt(clockEl);
// //   console.log("üî• fireAt –≤—ã–∑–≤–∞–Ω");

// //   setTimeout(() => {
// //     explousionSound.currentTime = 0;
// //     explousionSound.play().catch(e => console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:", e));
// //   }, 1000);
// // }

// // prevMinutes = minutes;

// // // –¢–µ—Å—Ç –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
// // if (seconds % 10 === 0) {
// //   console.log("üîî –¢–µ—Å—Ç 10-—Å–µ–∫—É–Ω–¥:", seconds);
// //   fireAtMikro(clockEl);
// // }
// // }

// // // 4) –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
// // setInterval(updateCountdown, 1000);

// function updateCountdown() {
//   const now = new Date();
//   const remainingTime = window.targetDate - now;

//   const days = Math.floor(remainingTime / (1000 * 60 * 60 * 24));
//   const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
//   const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));
//   const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);

//   document.getElementById('days').innerText    = String(days).padStart(2, '0');
//   document.getElementById('hours').innerText   = String(hours).padStart(2, '0');
//   document.getElementById('minutes').innerText = String(minutes).padStart(2, '0');
//   document.getElementById('seconds').innerText = String(seconds).padStart(2, '0');

//   // üîÅ –í—ã–∑–æ–≤ —Ö—É–∫–æ–≤, –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–¥–∞–Ω—ã
//   if (window.prevMinutes !== null && minutes !== window.prevMinutes) {
//     console.log("üïì –°–º–µ–Ω–∞ –º–∏–Ω—É—Ç:", window.prevMinutes, "‚Üí", minutes);
//     if (typeof window.onMinuteChange === 'function') {
//       window.onMinuteChange(minutes);
//     }
//   }

//   if (typeof window.onTenSecTick === 'function') {
//     window.onTenSecTick(seconds);
//   }

//   window.prevMinutes = minutes;
// }

// setInterval(updateCountdown, 1000);
// updateCountdown();